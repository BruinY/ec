//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EC
{
    
    
    /// <summary>
    /// The ApplicatonSection Configuration Section.
    /// </summary>
    public partial class ApplicatonSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the ApplicatonSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ApplicatonSectionSectionName = "applicatonSection";
        
        /// <summary>
        /// Gets the ApplicatonSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::EC.ApplicatonSection Instance
        {
            get
            {
                return ((global::EC.ApplicatonSection)(global::System.Configuration.ConfigurationManager.GetSection(global::EC.ApplicatonSection.ApplicatonSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::EC.ApplicatonSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.HostPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::EC.ApplicatonSection.HostPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.HostPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets the Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=10034)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::EC.ApplicatonSection.PortPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.PortPropertyName] = value;
            }
        }
        #endregion
        
        #region SyncSend Property
        /// <summary>
        /// The XML name of the <see cref="SyncSend"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SyncSendPropertyName = "syncSend";
        
        /// <summary>
        /// Gets or sets the SyncSend.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SyncSend.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.SyncSendPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool SyncSend
        {
            get
            {
                return ((bool)(base[global::EC.ApplicatonSection.SyncSendPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.SyncSendPropertyName] = value;
            }
        }
        #endregion
        
        #region SendThreads Property
        /// <summary>
        /// The XML name of the <see cref="SendThreads"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SendThreadsPropertyName = "sendThreads";
        
        /// <summary>
        /// Gets or sets the SendThreads.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SendThreads.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.SendThreadsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=1)]
        public virtual int SendThreads
        {
            get
            {
                return ((int)(base[global::EC.ApplicatonSection.SendThreadsPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.SendThreadsPropertyName] = value;
            }
        }
        #endregion
        
        #region ReceiveThreads Property
        /// <summary>
        /// The XML name of the <see cref="ReceiveThreads"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ReceiveThreadsPropertyName = "receiveThreads";
        
        /// <summary>
        /// Gets or sets the ReceiveThreads.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ReceiveThreads.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.ReceiveThreadsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=1)]
        public virtual int ReceiveThreads
        {
            get
            {
                return ((int)(base[global::EC.ApplicatonSection.ReceiveThreadsPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.ReceiveThreadsPropertyName] = value;
            }
        }
        #endregion
        
        #region PacketAnalyzer Property
        /// <summary>
        /// The XML name of the <see cref="PacketAnalyzer"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PacketAnalyzerPropertyName = "packetAnalyzer";
        
        /// <summary>
        /// Gets or sets the PacketAnalyzer.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The PacketAnalyzer.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.PacketAnalyzerPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string PacketAnalyzer
        {
            get
            {
                return ((string)(base[global::EC.ApplicatonSection.PacketAnalyzerPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.PacketAnalyzerPropertyName] = value;
            }
        }
        #endregion
        
        #region MessageCenter Property
        /// <summary>
        /// The XML name of the <see cref="MessageCenter"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string MessageCenterPropertyName = "messageCenter";
        
        /// <summary>
        /// Gets or sets the MessageCenter.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The MessageCenter.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.MessageCenterPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string MessageCenter
        {
            get
            {
                return ((string)(base[global::EC.ApplicatonSection.MessageCenterPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.MessageCenterPropertyName] = value;
            }
        }
        #endregion
        
        #region Http Property
        /// <summary>
        /// The XML name of the <see cref="Http"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HttpPropertyName = "http";
        
        /// <summary>
        /// Gets or sets the Http.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Http.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.HttpPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="http://localhost:10035/")]
        public virtual string Http
        {
            get
            {
                return ((string)(base[global::EC.ApplicatonSection.HttpPropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.HttpPropertyName] = value;
            }
        }
        #endregion
        
        #region PacketMaxsize Property
        /// <summary>
        /// The XML name of the <see cref="PacketMaxsize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PacketMaxsizePropertyName = "packetMaxsize";
        
        /// <summary>
        /// Gets or sets the PacketMaxsize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The PacketMaxsize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.PacketMaxsizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=52428800)]
        public virtual int PacketMaxsize
        {
            get
            {
                return ((int)(base[global::EC.ApplicatonSection.PacketMaxsizePropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.PacketMaxsizePropertyName] = value;
            }
        }
        #endregion
        
        #region SendQueue Property
        /// <summary>
        /// The XML name of the <see cref="SendQueue"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SendQueuePropertyName = "sendQueue";
        
        /// <summary>
        /// Gets or sets the SendQueue.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SendQueue.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.SendQueuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool SendQueue
        {
            get
            {
                return ((bool)(base[global::EC.ApplicatonSection.SendQueuePropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.SendQueuePropertyName] = value;
            }
        }
        #endregion
        
        #region ReceiveQueue Property
        /// <summary>
        /// The XML name of the <see cref="ReceiveQueue"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ReceiveQueuePropertyName = "receiveQueue";
        
        /// <summary>
        /// Gets or sets the ReceiveQueue.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ReceiveQueue.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::EC.ApplicatonSection.ReceiveQueuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool ReceiveQueue
        {
            get
            {
                return ((bool)(base[global::EC.ApplicatonSection.ReceiveQueuePropertyName]));
            }
            set
            {
                base[global::EC.ApplicatonSection.ReceiveQueuePropertyName] = value;
            }
        }
        #endregion
    }
}

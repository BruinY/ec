<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Beetle.Express.1.0.323.40208.Fakes</name>
    </assembly>
    <members>
        <member name="T:Beetle.Express.Clients.Fakes.ShimSyncTcpClient">
            <summary>Beetle.Express.Clients.SyncTcpClient 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.#ctor(Beetle.Express.Clients.SyncTcpClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.Connect">
            <summary>设置 SyncTcpClient.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.ConnectedGet">
            <summary>设置 SyncTcpClient.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.ConstructorStringInt32">
            <summary>设置 SyncTcpClient.SyncTcpClient(String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.ConstructorStringInt32IPackage">
            <summary>设置 SyncTcpClient.SyncTcpClient(String host, Int32 port, IPackage package) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.DisConnect">
            <summary>设置 SyncTcpClient.DisConnect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.LastErrorGet">
            <summary>设置 SyncTcpClient.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.OnConnectedGet">
            <summary>设置 SyncTcpClient.get_OnConnected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.OnConnectedSetSyncTcpClientEventConnectedToServer">
            <summary>设置 SyncTcpClient.set_OnConnected(EventConnectedToServer value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.PackageGet">
            <summary>设置 SyncTcpClient.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.ReceiveMessage">
            <summary>设置 SyncTcpClient.ReceiveMessage() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.Recieve">
            <summary>设置 SyncTcpClient.Recieve() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendArraySegmentOfByte">
            <summary>设置 SyncTcpClient.Send(ArraySegment`1&lt;Byte&gt; data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendByteArray">
            <summary>设置 SyncTcpClient.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendByteArrayInt32Int32">
            <summary>设置 SyncTcpClient.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendMessageObject">
            <summary>设置 SyncTcpClient.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendMessageOnlyObject">
            <summary>设置 SyncTcpClient.SendMessageOnly(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendOnlyByteArrayInt32Int32">
            <summary>设置 SyncTcpClient.SendOnly(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendString">
            <summary>设置 SyncTcpClient.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SendStringEncoding">
            <summary>设置 SyncTcpClient.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.SocketGet">
            <summary>设置 SyncTcpClient.get_Socket() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.TimeOutGet">
            <summary>设置 SyncTcpClient.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.TimeOutSetInt32">
            <summary>设置 SyncTcpClient.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.aIPackage">
            <summary>设置 SyncTcpClient.a(IPackage A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.aObjectPackageReceiveArgs">
            <summary>设置 SyncTcpClient.a(Object A_0, PackageReceiveArgs A_1) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.aStringInt32">
            <summary>设置 SyncTcpClient.a(String A_0, Int32 A_1) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.Connect">
            <summary>设置 SyncTcpClient.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.ConnectedGet">
            <summary>设置 SyncTcpClient.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.DisConnect">
            <summary>设置 SyncTcpClient.DisConnect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.LastErrorGet">
            <summary>设置 SyncTcpClient.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.OnConnectedGet">
            <summary>设置 SyncTcpClient.get_OnConnected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.OnConnectedSetSyncTcpClientEventConnectedToServer">
            <summary>设置 SyncTcpClient.set_OnConnected(EventConnectedToServer value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.PackageGet">
            <summary>设置 SyncTcpClient.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.ReceiveMessage">
            <summary>设置 SyncTcpClient.ReceiveMessage() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.Recieve">
            <summary>设置 SyncTcpClient.Recieve() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendArraySegmentOfByte">
            <summary>设置 SyncTcpClient.Send(ArraySegment`1&lt;Byte&gt; data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendByteArray">
            <summary>设置 SyncTcpClient.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendByteArrayInt32Int32">
            <summary>设置 SyncTcpClient.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendMessageObject">
            <summary>设置 SyncTcpClient.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendMessageOnlyObject">
            <summary>设置 SyncTcpClient.SendMessageOnly(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendOnlyByteArrayInt32Int32">
            <summary>设置 SyncTcpClient.SendOnly(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendString">
            <summary>设置 SyncTcpClient.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SendStringEncoding">
            <summary>设置 SyncTcpClient.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.SocketGet">
            <summary>设置 SyncTcpClient.get_Socket() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.TimeOutGet">
            <summary>设置 SyncTcpClient.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.TimeOutSetInt32">
            <summary>设置 SyncTcpClient.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.aIPackage">
            <summary>设置 SyncTcpClient.a(IPackage A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.aObjectPackageReceiveArgs">
            <summary>设置 SyncTcpClient.a(Object A_0, PackageReceiveArgs A_1) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClient.AllInstances.aStringInt32">
            <summary>设置 SyncTcpClient.a(String A_0, Int32 A_1) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool">
            <summary>Beetle.Express.Clients.SyncTcpClientPool 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.#ctor(Beetle.Express.Clients.SyncTcpClientPool)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.Connect">
            <summary>设置 SyncTcpClientPool.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.ConnectedGet">
            <summary>设置 SyncTcpClientPool.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.ConstructorStringInt32">
            <summary>设置 SyncTcpClientPool.SyncTcpClientPool(String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.Dispose">
            <summary>设置 SyncTcpClientPool.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.LastErrorGet">
            <summary>设置 SyncTcpClientPool.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.LastErrorTimeGet">
            <summary>设置 SyncTcpClientPool.get_LastErrorTime() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.LastErrorTimeSetDateTime">
            <summary>设置 SyncTcpClientPool.set_LastErrorTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.PackageGet">
            <summary>设置 SyncTcpClientPool.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.PackageSetIPackage">
            <summary>设置 SyncTcpClientPool.set_Package(IPackage value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.SendByteArray">
            <summary>设置 SyncTcpClientPool.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.SendByteArrayInt32Int32">
            <summary>设置 SyncTcpClientPool.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.SendMessageObject">
            <summary>设置 SyncTcpClientPool.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.SendString">
            <summary>设置 SyncTcpClientPool.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.SendStringEncoding">
            <summary>设置 SyncTcpClientPool.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.a">
            <summary>设置 SyncTcpClientPool.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.aSyncTcpClient">
            <summary>设置 SyncTcpClientPool.a(SyncTcpClient A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.b">
            <summary>设置 SyncTcpClientPool.b() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.c">
            <summary>设置 SyncTcpClientPool.c() 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.Connect">
            <summary>设置 SyncTcpClientPool.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.ConnectedGet">
            <summary>设置 SyncTcpClientPool.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.Dispose">
            <summary>设置 SyncTcpClientPool.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.LastErrorGet">
            <summary>设置 SyncTcpClientPool.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.LastErrorTimeGet">
            <summary>设置 SyncTcpClientPool.get_LastErrorTime() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.LastErrorTimeSetDateTime">
            <summary>设置 SyncTcpClientPool.set_LastErrorTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.PackageGet">
            <summary>设置 SyncTcpClientPool.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.PackageSetIPackage">
            <summary>设置 SyncTcpClientPool.set_Package(IPackage value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.SendByteArray">
            <summary>设置 SyncTcpClientPool.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.SendByteArrayInt32Int32">
            <summary>设置 SyncTcpClientPool.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.SendMessageObject">
            <summary>设置 SyncTcpClientPool.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.SendString">
            <summary>设置 SyncTcpClientPool.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.SendStringEncoding">
            <summary>设置 SyncTcpClientPool.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.a">
            <summary>设置 SyncTcpClientPool.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.aSyncTcpClient">
            <summary>设置 SyncTcpClientPool.a(SyncTcpClient A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.b">
            <summary>设置 SyncTcpClientPool.b() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimSyncTcpClientPool.AllInstances.c">
            <summary>设置 SyncTcpClientPool.c() 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimTcpClient">
            <summary>Beetle.Express.Clients.TcpClient 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClient.#ctor(Beetle.Express.Clients.TcpClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.Connect">
            <summary>设置 TcpClient.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.ConnectedGet">
            <summary>设置 TcpClient.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.ConstructorStringInt32">
            <summary>设置 TcpClient.TcpClient(String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.ConstructorStringInt32IPackage">
            <summary>设置 TcpClient.TcpClient(String host, Int32 port, IPackage package) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.DisConnect">
            <summary>设置 TcpClient.DisConnect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.LastErrorGet">
            <summary>设置 TcpClient.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.OnConnectedGet">
            <summary>设置 TcpClient.get_OnConnected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.OnConnectedSetTcpClientEventConnectedToServer">
            <summary>设置 TcpClient.set_OnConnected(EventConnectedToServer value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.OnReceiveTcpReceiveArgs">
            <summary>设置 TcpClient.OnReceive(TcpReceiveArgs e) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.PackageGet">
            <summary>设置 TcpClient.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.ReceiveAddEventHandlerOfTcpReceiveArgs">
            <summary>设置 TcpClient.add_Receive(EventHandler`1&lt;TcpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.ReceiveRemoveEventHandlerOfTcpReceiveArgs">
            <summary>设置 TcpClient.remove_Receive(EventHandler`1&lt;TcpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.SendArraySegmentOfByte">
            <summary>设置 TcpClient.Send(ArraySegment`1&lt;Byte&gt; data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.SendByteArray">
            <summary>设置 TcpClient.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.SendByteArrayInt32Int32">
            <summary>设置 TcpClient.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.SendMessageObject">
            <summary>设置 TcpClient.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.SendString">
            <summary>设置 TcpClient.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.SendStringEncoding">
            <summary>设置 TcpClient.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.SocketGet">
            <summary>设置 TcpClient.get_Socket() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.TimeOutGet">
            <summary>设置 TcpClient.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.TimeOutSetInt32">
            <summary>设置 TcpClient.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.a">
            <summary>设置 TcpClient.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.aIPackage">
            <summary>设置 TcpClient.a(IPackage A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.aObjectSocketAsyncEventArgs">
            <summary>设置 TcpClient.a(Object A_0, SocketAsyncEventArgs A_1) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.aStringInt32">
            <summary>设置 TcpClient.a(String A_0, Int32 A_1) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.Connect">
            <summary>设置 TcpClient.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.ConnectedGet">
            <summary>设置 TcpClient.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.DisConnect">
            <summary>设置 TcpClient.DisConnect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.LastErrorGet">
            <summary>设置 TcpClient.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.OnConnectedGet">
            <summary>设置 TcpClient.get_OnConnected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.OnConnectedSetTcpClientEventConnectedToServer">
            <summary>设置 TcpClient.set_OnConnected(EventConnectedToServer value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.OnReceiveTcpReceiveArgs">
            <summary>设置 TcpClient.OnReceive(TcpReceiveArgs e) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.PackageGet">
            <summary>设置 TcpClient.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.ReceiveAddEventHandlerOfTcpReceiveArgs">
            <summary>设置 TcpClient.add_Receive(EventHandler`1&lt;TcpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.ReceiveRemoveEventHandlerOfTcpReceiveArgs">
            <summary>设置 TcpClient.remove_Receive(EventHandler`1&lt;TcpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.SendArraySegmentOfByte">
            <summary>设置 TcpClient.Send(ArraySegment`1&lt;Byte&gt; data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.SendByteArray">
            <summary>设置 TcpClient.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.SendByteArrayInt32Int32">
            <summary>设置 TcpClient.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.SendMessageObject">
            <summary>设置 TcpClient.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.SendString">
            <summary>设置 TcpClient.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.SendStringEncoding">
            <summary>设置 TcpClient.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.SocketGet">
            <summary>设置 TcpClient.get_Socket() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.TimeOutGet">
            <summary>设置 TcpClient.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.TimeOutSetInt32">
            <summary>设置 TcpClient.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.a">
            <summary>设置 TcpClient.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.aIPackage">
            <summary>设置 TcpClient.a(IPackage A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.aObjectSocketAsyncEventArgs">
            <summary>设置 TcpClient.a(Object A_0, SocketAsyncEventArgs A_1) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClient.AllInstances.aStringInt32">
            <summary>设置 TcpClient.a(String A_0, Int32 A_1) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimTcpClientPool">
            <summary>Beetle.Express.Clients.TcpClientPool 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClientPool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClientPool.#ctor(Beetle.Express.Clients.TcpClientPool)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClientPool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClientPool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpClientPool.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.Connect">
            <summary>设置 TcpClientPool.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.ConnectedGet">
            <summary>设置 TcpClientPool.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.ConstructorStringInt32EventHandlerOfTcpReceiveArgs">
            <summary>设置 TcpClientPool.TcpClientPool(String host, Int32 port, EventHandler`1&lt;TcpReceiveArgs&gt; receive) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.Dispose">
            <summary>设置 TcpClientPool.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.LastErrorGet">
            <summary>设置 TcpClientPool.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.LastErrorTimeGet">
            <summary>设置 TcpClientPool.get_LastErrorTime() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.LastErrorTimeSetDateTime">
            <summary>设置 TcpClientPool.set_LastErrorTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.PackageGet">
            <summary>设置 TcpClientPool.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.PackageSetIPackage">
            <summary>设置 TcpClientPool.set_Package(IPackage value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.SendByteArray">
            <summary>设置 TcpClientPool.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.SendByteArrayInt32Int32">
            <summary>设置 TcpClientPool.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.SendMessageObject">
            <summary>设置 TcpClientPool.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.SendString">
            <summary>设置 TcpClientPool.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.SendStringEncoding">
            <summary>设置 TcpClientPool.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.a">
            <summary>设置 TcpClientPool.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.aTcpClient">
            <summary>设置 TcpClientPool.a(TcpClient A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.b">
            <summary>设置 TcpClientPool.b() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.c">
            <summary>设置 TcpClientPool.c() 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.Connect">
            <summary>设置 TcpClientPool.Connect() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.ConnectedGet">
            <summary>设置 TcpClientPool.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.Dispose">
            <summary>设置 TcpClientPool.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.LastErrorGet">
            <summary>设置 TcpClientPool.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.LastErrorTimeGet">
            <summary>设置 TcpClientPool.get_LastErrorTime() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.LastErrorTimeSetDateTime">
            <summary>设置 TcpClientPool.set_LastErrorTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.PackageGet">
            <summary>设置 TcpClientPool.get_Package() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.PackageSetIPackage">
            <summary>设置 TcpClientPool.set_Package(IPackage value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.SendByteArray">
            <summary>设置 TcpClientPool.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.SendByteArrayInt32Int32">
            <summary>设置 TcpClientPool.Send(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.SendMessageObject">
            <summary>设置 TcpClientPool.SendMessage(Object message) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.SendString">
            <summary>设置 TcpClientPool.Send(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.SendStringEncoding">
            <summary>设置 TcpClientPool.Send(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.a">
            <summary>设置 TcpClientPool.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.aTcpClient">
            <summary>设置 TcpClientPool.a(TcpClient A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.b">
            <summary>设置 TcpClientPool.b() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpClientPool.AllInstances.c">
            <summary>设置 TcpClientPool.c() 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs">
            <summary>Beetle.Express.Clients.TcpReceiveArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.#ctor(Beetle.Express.Clients.TcpReceiveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.ClientGet">
            <summary>设置 TcpReceiveArgs.get_Client() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.Constructor">
            <summary>设置 TcpReceiveArgs.TcpReceiveArgs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.CopyToByteArrayInt32">
            <summary>设置 TcpReceiveArgs.CopyTo(Byte[] data, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.CountGet">
            <summary>设置 TcpReceiveArgs.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.DataGet">
            <summary>设置 TcpReceiveArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.OffsetGet">
            <summary>设置 TcpReceiveArgs.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.ToArray">
            <summary>设置 TcpReceiveArgs.ToArray() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.aByteArray">
            <summary>设置 TcpReceiveArgs.a(Byte[] A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.aInt32">
            <summary>设置 TcpReceiveArgs.a(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.aTcpClient">
            <summary>设置 TcpReceiveArgs.a(TcpClient A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.bInt32">
            <summary>设置 TcpReceiveArgs.b(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.ClientGet">
            <summary>设置 TcpReceiveArgs.get_Client() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.CopyToByteArrayInt32">
            <summary>设置 TcpReceiveArgs.CopyTo(Byte[] data, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.CountGet">
            <summary>设置 TcpReceiveArgs.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.DataGet">
            <summary>设置 TcpReceiveArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.OffsetGet">
            <summary>设置 TcpReceiveArgs.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.ToArray">
            <summary>设置 TcpReceiveArgs.ToArray() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.aByteArray">
            <summary>设置 TcpReceiveArgs.a(Byte[] A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.aInt32">
            <summary>设置 TcpReceiveArgs.a(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.aTcpClient">
            <summary>设置 TcpReceiveArgs.a(TcpClient A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimTcpReceiveArgs.AllInstances.bInt32">
            <summary>设置 TcpReceiveArgs.b(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimUdpClient">
            <summary>Beetle.Express.Clients.UdpClient 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpClient.#ctor(Beetle.Express.Clients.UdpClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.ConstructorStringInt32">
            <summary>设置 UdpClient.UdpClient(String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.LastErrorGet">
            <summary>设置 UdpClient.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.OnReceiveUdpReceiveArgs">
            <summary>设置 UdpClient.OnReceive(UdpReceiveArgs e) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.ReceiveAddEventHandlerOfUdpReceiveArgs">
            <summary>设置 UdpClient.add_Receive(EventHandler`1&lt;UdpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.ReceiveRemoveEventHandlerOfUdpReceiveArgs">
            <summary>设置 UdpClient.remove_Receive(EventHandler`1&lt;UdpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.SendByteArrayEndPoint">
            <summary>设置 UdpClient.Send(Byte[] data, EndPoint point) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.SendByteArrayInt32Int32EndPoint">
            <summary>设置 UdpClient.Send(Byte[] data, Int32 offset, Int32 count, EndPoint point) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.SendByteArrayStringInt32">
            <summary>设置 UdpClient.Send(Byte[] data, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.SendStringEndPoint">
            <summary>设置 UdpClient.Send(String data, EndPoint point) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.SendStringStringInt32">
            <summary>设置 UdpClient.Send(String data, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.a">
            <summary>设置 UdpClient.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.aObjectSocketAsyncEventArgs">
            <summary>设置 UdpClient.a(Object A_0, SocketAsyncEventArgs A_1) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.LastErrorGet">
            <summary>设置 UdpClient.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.OnReceiveUdpReceiveArgs">
            <summary>设置 UdpClient.OnReceive(UdpReceiveArgs e) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.ReceiveAddEventHandlerOfUdpReceiveArgs">
            <summary>设置 UdpClient.add_Receive(EventHandler`1&lt;UdpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.ReceiveRemoveEventHandlerOfUdpReceiveArgs">
            <summary>设置 UdpClient.remove_Receive(EventHandler`1&lt;UdpReceiveArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.SendByteArrayEndPoint">
            <summary>设置 UdpClient.Send(Byte[] data, EndPoint point) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.SendByteArrayInt32Int32EndPoint">
            <summary>设置 UdpClient.Send(Byte[] data, Int32 offset, Int32 count, EndPoint point) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.SendByteArrayStringInt32">
            <summary>设置 UdpClient.Send(Byte[] data, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.SendStringEndPoint">
            <summary>设置 UdpClient.Send(String data, EndPoint point) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.SendStringStringInt32">
            <summary>设置 UdpClient.Send(String data, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.a">
            <summary>设置 UdpClient.a() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpClient.AllInstances.aObjectSocketAsyncEventArgs">
            <summary>设置 UdpClient.a(Object A_0, SocketAsyncEventArgs A_1) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs">
            <summary>Beetle.Express.Clients.UdpReceiveArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.#ctor(Beetle.Express.Clients.UdpReceiveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.Constructor">
            <summary>设置 UdpReceiveArgs.UdpReceiveArgs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.CopyToByteArrayInt32">
            <summary>设置 UdpReceiveArgs.CopyTo(Byte[] data, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.CountGet">
            <summary>设置 UdpReceiveArgs.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.DataGet">
            <summary>设置 UdpReceiveArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.EndPointGet">
            <summary>设置 UdpReceiveArgs.get_EndPoint() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.OffsetGet">
            <summary>设置 UdpReceiveArgs.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.ToArray">
            <summary>设置 UdpReceiveArgs.ToArray() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.aByteArray">
            <summary>设置 UdpReceiveArgs.a(Byte[] A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.aEndPoint">
            <summary>设置 UdpReceiveArgs.a(EndPoint A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.aInt32">
            <summary>设置 UdpReceiveArgs.a(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.bInt32">
            <summary>设置 UdpReceiveArgs.b(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.CopyToByteArrayInt32">
            <summary>设置 UdpReceiveArgs.CopyTo(Byte[] data, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.CountGet">
            <summary>设置 UdpReceiveArgs.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.DataGet">
            <summary>设置 UdpReceiveArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.EndPointGet">
            <summary>设置 UdpReceiveArgs.get_EndPoint() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.OffsetGet">
            <summary>设置 UdpReceiveArgs.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.ToArray">
            <summary>设置 UdpReceiveArgs.ToArray() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.aByteArray">
            <summary>设置 UdpReceiveArgs.a(Byte[] A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.aEndPoint">
            <summary>设置 UdpReceiveArgs.a(EndPoint A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.aInt32">
            <summary>设置 UdpReceiveArgs.a(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.ShimUdpReceiveArgs.AllInstances.bInt32">
            <summary>设置 UdpReceiveArgs.b(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.StubSyncTcpClient">
            <summary>Beetle.Express.Clients.SyncTcpClient 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubSyncTcpClient.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubSyncTcpClient.#ctor(System.String,System.Int32,Beetle.Express.IPackage)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubSyncTcpClient.InitializeStub">
            <summary>初始化 type StubSyncTcpClient 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubSyncTcpClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubSyncTcpClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubSyncTcpClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.StubSyncTcpClientPool">
            <summary>Beetle.Express.Clients.SyncTcpClientPool 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubSyncTcpClientPool.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubSyncTcpClientPool.InitializeStub">
            <summary>初始化 type StubSyncTcpClientPool 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubSyncTcpClientPool.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubSyncTcpClientPool.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubSyncTcpClientPool.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.StubTcpClient">
            <summary>Beetle.Express.Clients.TcpClient 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpClient.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpClient.#ctor(System.String,System.Int32,Beetle.Express.IPackage)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpClient.InitializeStub">
            <summary>初始化 type StubTcpClient 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpClient.OnReceive(Beetle.Express.Clients.TcpReceiveArgs)">
            <summary>设置 TcpClient.OnReceive(TcpReceiveArgs e) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Clients.Fakes.StubTcpClient.OnReceiveTcpReceiveArgs">
            <summary>设置 TcpClient.OnReceive(TcpReceiveArgs e) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.StubTcpClientPool">
            <summary>Beetle.Express.Clients.TcpClientPool 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpClientPool.#ctor(System.String,System.Int32,System.EventHandler{Beetle.Express.Clients.TcpReceiveArgs})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpClientPool.InitializeStub">
            <summary>初始化 type StubTcpClientPool 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpClientPool.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpClientPool.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpClientPool.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.StubTcpReceiveArgs">
            <summary>Beetle.Express.Clients.TcpReceiveArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpReceiveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubTcpReceiveArgs.InitializeStub">
            <summary>初始化 type StubTcpReceiveArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpReceiveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpReceiveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubTcpReceiveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.StubUdpClient">
            <summary>Beetle.Express.Clients.UdpClient 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubUdpClient.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubUdpClient.InitializeStub">
            <summary>初始化 type StubUdpClient 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubUdpClient.OnReceive(Beetle.Express.Clients.UdpReceiveArgs)">
            <summary>设置 UdpClient.OnReceive(UdpReceiveArgs e) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Clients.Fakes.StubUdpClient.OnReceiveUdpReceiveArgs">
            <summary>设置 UdpClient.OnReceive(UdpReceiveArgs e) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubUdpClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubUdpClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubUdpClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Clients.Fakes.StubUdpReceiveArgs">
            <summary>Beetle.Express.Clients.UdpReceiveArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubUdpReceiveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Clients.Fakes.StubUdpReceiveArgs.InitializeStub">
            <summary>初始化 type StubUdpReceiveArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubUdpReceiveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubUdpReceiveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Clients.Fakes.StubUdpReceiveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelConnectEventArgs">
            <summary>Beetle.Express.ChannelConnectEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelConnectEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelConnectEventArgs.#ctor(Beetle.Express.ChannelConnectEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelConnectEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelConnectEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelConnectEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelConnectEventArgs.CancelGet">
            <summary>设置 ChannelConnectEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelConnectEventArgs.CancelSetBoolean">
            <summary>设置 ChannelConnectEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelConnectEventArgs.Constructor">
            <summary>设置 ChannelConnectEventArgs.ChannelConnectEventArgs() 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelConnectEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelConnectEventArgs.AllInstances.CancelGet">
            <summary>设置 ChannelConnectEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelConnectEventArgs.AllInstances.CancelSetBoolean">
            <summary>设置 ChannelConnectEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelEventArgs">
            <summary>Beetle.Express.ChannelEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelEventArgs.#ctor(Beetle.Express.ChannelEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelEventArgs.ChannelGet">
            <summary>设置 ChannelEventArgs.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelEventArgs.Constructor">
            <summary>设置 ChannelEventArgs.ChannelEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelEventArgs.aIChannel">
            <summary>设置 ChannelEventArgs.a(IChannel A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelEventArgs.AllInstances.ChannelGet">
            <summary>设置 ChannelEventArgs.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelEventArgs.AllInstances.aIChannel">
            <summary>设置 ChannelEventArgs.a(IChannel A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelReceiveEventArgs">
            <summary>Beetle.Express.ChannelReceiveEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.#ctor(Beetle.Express.ChannelReceiveEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.Constructor">
            <summary>设置 ChannelReceiveEventArgs.ChannelReceiveEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.DataGet">
            <summary>设置 ChannelReceiveEventArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.aIReceiveData">
            <summary>设置 ChannelReceiveEventArgs.a(IReceiveData A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.AllInstances.DataGet">
            <summary>设置 ChannelReceiveEventArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelReceiveEventArgs.AllInstances.aIReceiveData">
            <summary>设置 ChannelReceiveEventArgs.a(IReceiveData A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelSendEventArgs">
            <summary>Beetle.Express.ChannelSendEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelSendEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelSendEventArgs.#ctor(Beetle.Express.ChannelSendEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelSendEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimChannelSendEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.Constructor">
            <summary>设置 ChannelSendEventArgs.ChannelSendEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.DataGet">
            <summary>设置 ChannelSendEventArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.DataSetIData">
            <summary>设置 ChannelSendEventArgs.set_Data(IData value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.StatusGet">
            <summary>设置 ChannelSendEventArgs.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.StatusSetSendStatus">
            <summary>设置 ChannelSendEventArgs.set_Status(SendStatus value) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimChannelSendEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.AllInstances.DataGet">
            <summary>设置 ChannelSendEventArgs.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.AllInstances.DataSetIData">
            <summary>设置 ChannelSendEventArgs.set_Data(IData value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.AllInstances.StatusGet">
            <summary>设置 ChannelSendEventArgs.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimChannelSendEventArgs.AllInstances.StatusSetSendStatus">
            <summary>设置 ChannelSendEventArgs.set_Status(SendStatus value) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimData">
            <summary>Beetle.Express.Data 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimData.#ctor(Beetle.Express.Data)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimData.Bind(Beetle.Express.IData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.ArrayGet">
            <summary>设置 Data.get_Array() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.ArraySetByteArray">
            <summary>设置 Data.set_Array(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.Constructor">
            <summary>设置 Data.Data() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.ConstructorByteArrayInt32">
            <summary>设置 Data.Data(Byte[] array, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.ConstructorInt32">
            <summary>设置 Data.Data(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.CountGet">
            <summary>设置 Data.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.CountSetInt32">
            <summary>设置 Data.set_Count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.CounterGet">
            <summary>设置 Data.get_Counter() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.Decrement">
            <summary>设置 Data.Decrement() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.ExChangeInt32">
            <summary>设置 Data.ExChange(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.OffsetGet">
            <summary>设置 Data.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.OffsetSetInt32">
            <summary>设置 Data.set_Offset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.SetBufferByteArrayInt32">
            <summary>设置 Data.SetBuffer(Byte[] data, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.SetBufferByteArrayInt32Int32">
            <summary>设置 Data.SetBuffer(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.TagGet">
            <summary>设置 Data.get_Tag() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.TagSetObject">
            <summary>设置 Data.set_Tag(Object value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.UsePoolGet">
            <summary>设置 Data.get_UsePool() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.UsePoolSetBoolean">
            <summary>设置 Data.set_UsePool(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.WriteByteArray">
            <summary>设置 Data.Write(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.WriteByteArrayInt32">
            <summary>设置 Data.Write(Byte[] data, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.WriteByteArrayInt32Int32">
            <summary>设置 Data.Write(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.WriteStream">
            <summary>设置 Data.Write(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.WriteStringEncoding">
            <summary>设置 Data.Write(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.ArrayGet">
            <summary>设置 Data.get_Array() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.ArraySetByteArray">
            <summary>设置 Data.set_Array(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.CountGet">
            <summary>设置 Data.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.CountSetInt32">
            <summary>设置 Data.set_Count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.CounterGet">
            <summary>设置 Data.get_Counter() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.Decrement">
            <summary>设置 Data.Decrement() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.ExChangeInt32">
            <summary>设置 Data.ExChange(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.OffsetGet">
            <summary>设置 Data.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.OffsetSetInt32">
            <summary>设置 Data.set_Offset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.SetBufferByteArrayInt32">
            <summary>设置 Data.SetBuffer(Byte[] data, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.SetBufferByteArrayInt32Int32">
            <summary>设置 Data.SetBuffer(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.TagGet">
            <summary>设置 Data.get_Tag() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.TagSetObject">
            <summary>设置 Data.set_Tag(Object value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.UsePoolGet">
            <summary>设置 Data.get_UsePool() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.UsePoolSetBoolean">
            <summary>设置 Data.set_UsePool(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.WriteByteArray">
            <summary>设置 Data.Write(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.WriteByteArrayInt32">
            <summary>设置 Data.Write(Byte[] data, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 Data.Write(Byte[] data, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.WriteStream">
            <summary>设置 Data.Write(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimData.AllInstances.WriteStringEncoding">
            <summary>设置 Data.Write(String value, Encoding coding) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimErrorEventArgs">
            <summary>Beetle.Express.ErrorEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimErrorEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimErrorEventArgs.#ctor(Beetle.Express.ErrorEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimErrorEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimErrorEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.Constructor">
            <summary>设置 ErrorEventArgs.ErrorEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.ErrorGet">
            <summary>设置 ErrorEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.TagGet">
            <summary>设置 ErrorEventArgs.get_Tag() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.TagSetString">
            <summary>设置 ErrorEventArgs.set_Tag(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.aException">
            <summary>设置 ErrorEventArgs.a(Exception A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimErrorEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.AllInstances.ErrorGet">
            <summary>设置 ErrorEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.AllInstances.TagGet">
            <summary>设置 ErrorEventArgs.get_Tag() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.AllInstances.TagSetString">
            <summary>设置 ErrorEventArgs.set_Tag(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimErrorEventArgs.AllInstances.aException">
            <summary>设置 ErrorEventArgs.a(Exception A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimLRUDetect">
            <summary>Beetle.Express.LRUDetect 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.#ctor(Beetle.Express.LRUDetect)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.ConstructorInt32">
            <summary>设置 LRUDetect.LRUDetect(Int32 timeout) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.DeleteLRUDetectIConnecton">
            <summary>设置 LRUDetect.Delete(IConnecton connection) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.Dispose">
            <summary>设置 LRUDetect.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.UpdateLRUDetectIConnecton">
            <summary>设置 LRUDetect.Update(IConnecton connection) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.aObject">
            <summary>设置 LRUDetect.a(Object A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimLRUDetect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.AllInstances.DeleteLRUDetectIConnecton">
            <summary>设置 LRUDetect.Delete(IConnecton connection) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.AllInstances.Dispose">
            <summary>设置 LRUDetect.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.AllInstances.UpdateLRUDetectIConnecton">
            <summary>设置 LRUDetect.Update(IConnecton connection) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.AllInstances.aObject">
            <summary>设置 LRUDetect.a(Object A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimLRUDetect.ShimNode">
            <summary>Beetle.Express.LRUDetect+Node 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.#ctor(Beetle.Express.LRUDetect.Node)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.Constructor">
            <summary>设置 Node.Node() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.DetectInt32Int32">
            <summary>设置 Node.Detect(Int32 cutime, Int32 timeout) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimLRUDetect.ShimNode.AllInstances.DetectInt32Int32">
            <summary>设置 Node.Detect(Int32 cutime, Int32 timeout) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimListen">
            <summary>Beetle.Express.Listen 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListen.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListen.#ctor(Beetle.Express.Listen)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListen.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListen.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.Constructor">
            <summary>设置 Listen.Listen() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.HandlerGet">
            <summary>设置 Listen.get_Handler() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.HandlerSetString">
            <summary>设置 Listen.set_Handler(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.HostGet">
            <summary>设置 Listen.get_Host() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.HostSetString">
            <summary>设置 Listen.set_Host(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.IsReadOnly">
            <summary>设置 Listen.IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.NameGet">
            <summary>设置 Listen.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.NameSetString">
            <summary>设置 Listen.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.PortGet">
            <summary>设置 Listen.get_Port() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.PortSetInt32">
            <summary>设置 Listen.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.ReceiveBufferSizeGet">
            <summary>设置 Listen.get_ReceiveBufferSize() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.ReceiveBufferSizeSetInt32">
            <summary>设置 Listen.set_ReceiveBufferSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.ReceiveDataPoolSizeGet">
            <summary>设置 Listen.get_ReceiveDataPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.ReceiveDataPoolSizeSetInt32">
            <summary>设置 Listen.set_ReceiveDataPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.ReceiveDispatchsGet">
            <summary>设置 Listen.get_ReceiveDispatchs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.ReceiveDispatchsSetInt32">
            <summary>设置 Listen.set_ReceiveDispatchs(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.SendBufferSizeGet">
            <summary>设置 Listen.get_SendBufferSize() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.SendBufferSizeSetInt32">
            <summary>设置 Listen.set_SendBufferSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.SendDispatchsGet">
            <summary>设置 Listen.get_SendDispatchs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.SendDispatchsSetInt32">
            <summary>设置 Listen.set_SendDispatchs(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.SyncSendGet">
            <summary>设置 Listen.get_SyncSend() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.SyncSendSetBoolean">
            <summary>设置 Listen.set_SyncSend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.TypeGet">
            <summary>设置 Listen.get_Type() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.TypeSetString">
            <summary>设置 Listen.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.UseReceiveQueueGet">
            <summary>设置 Listen.get_UseReceiveQueue() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.UseReceiveQueueSetBoolean">
            <summary>设置 Listen.set_UseReceiveQueue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.UseSendQueueGet">
            <summary>设置 Listen.get_UseSendQueue() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.UseSendQueueSetBoolean">
            <summary>设置 Listen.set_UseSendQueue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimListen.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.HandlerGet">
            <summary>设置 Listen.get_Handler() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.HandlerSetString">
            <summary>设置 Listen.set_Handler(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.HostGet">
            <summary>设置 Listen.get_Host() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.HostSetString">
            <summary>设置 Listen.set_Host(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.IsReadOnly">
            <summary>设置 Listen.IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.NameGet">
            <summary>设置 Listen.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.NameSetString">
            <summary>设置 Listen.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.PortGet">
            <summary>设置 Listen.get_Port() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.PortSetInt32">
            <summary>设置 Listen.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.ReceiveBufferSizeGet">
            <summary>设置 Listen.get_ReceiveBufferSize() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.ReceiveBufferSizeSetInt32">
            <summary>设置 Listen.set_ReceiveBufferSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.ReceiveDataPoolSizeGet">
            <summary>设置 Listen.get_ReceiveDataPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.ReceiveDataPoolSizeSetInt32">
            <summary>设置 Listen.set_ReceiveDataPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.ReceiveDispatchsGet">
            <summary>设置 Listen.get_ReceiveDispatchs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.ReceiveDispatchsSetInt32">
            <summary>设置 Listen.set_ReceiveDispatchs(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.SendBufferSizeGet">
            <summary>设置 Listen.get_SendBufferSize() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.SendBufferSizeSetInt32">
            <summary>设置 Listen.set_SendBufferSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.SendDispatchsGet">
            <summary>设置 Listen.get_SendDispatchs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.SendDispatchsSetInt32">
            <summary>设置 Listen.set_SendDispatchs(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.SyncSendGet">
            <summary>设置 Listen.get_SyncSend() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.SyncSendSetBoolean">
            <summary>设置 Listen.set_SyncSend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.TypeGet">
            <summary>设置 Listen.get_Type() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.TypeSetString">
            <summary>设置 Listen.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.UseReceiveQueueGet">
            <summary>设置 Listen.get_UseReceiveQueue() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.UseReceiveQueueSetBoolean">
            <summary>设置 Listen.set_UseReceiveQueue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.UseSendQueueGet">
            <summary>设置 Listen.get_UseSendQueue() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListen.AllInstances.UseSendQueueSetBoolean">
            <summary>设置 Listen.set_UseSendQueue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimListenCollection">
            <summary>Beetle.Express.ListenCollection 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListenCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListenCollection.#ctor(Beetle.Express.ListenCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListenCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListenCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListenCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimListenCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AddListen">
            <summary>设置 ListenCollection.Add(Listen serverListen) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.CollectionTypeGet">
            <summary>设置 ListenCollection.get_CollectionType() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.Constructor">
            <summary>设置 ListenCollection.ListenCollection() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.CreateNewElement">
            <summary>设置 ListenCollection.CreateNewElement() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.ElementNameGet">
            <summary>设置 ListenCollection.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.GetElementKeyConfigurationElement">
            <summary>设置 ListenCollection.GetElementKey(ConfigurationElement element) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.GetItemAtInt32">
            <summary>设置 ListenCollection.GetItemAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.GetItemByKeyString">
            <summary>设置 ListenCollection.GetItemByKey(String name) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.IsElementNameString">
            <summary>设置 ListenCollection.IsElementName(String elementName) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.IsReadOnly">
            <summary>设置 ListenCollection.IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.ItemGetInt32">
            <summary>设置 ListenCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.ItemGetObject">
            <summary>设置 ListenCollection.get_Item(Object name) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.RemoveListen">
            <summary>设置 ListenCollection.Remove(Listen serverListen) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimListenCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.AddListen">
            <summary>设置 ListenCollection.Add(Listen serverListen) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.CollectionTypeGet">
            <summary>设置 ListenCollection.get_CollectionType() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.CreateNewElement">
            <summary>设置 ListenCollection.CreateNewElement() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.ElementNameGet">
            <summary>设置 ListenCollection.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>设置 ListenCollection.GetElementKey(ConfigurationElement element) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.GetItemAtInt32">
            <summary>设置 ListenCollection.GetItemAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.GetItemByKeyString">
            <summary>设置 ListenCollection.GetItemByKey(String name) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.IsElementNameString">
            <summary>设置 ListenCollection.IsElementName(String elementName) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.IsReadOnly">
            <summary>设置 ListenCollection.IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.ItemGetInt32">
            <summary>设置 ListenCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.ItemGetObject">
            <summary>设置 ListenCollection.get_Item(Object name) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimListenCollection.AllInstances.RemoveListen">
            <summary>设置 ListenCollection.Remove(Listen serverListen) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimOnlineSegment">
            <summary>Beetle.Express.OnlineSegment 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimOnlineSegment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimOnlineSegment.#ctor(Beetle.Express.OnlineSegment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimOnlineSegment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimOnlineSegment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.ChannelsGet">
            <summary>设置 OnlineSegment.get_Channels() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.ConstructorInt32">
            <summary>设置 OnlineSegment.OnlineSegment(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.CountGet">
            <summary>设置 OnlineSegment.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.VersionGet">
            <summary>设置 OnlineSegment.get_Version() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.VersionSetInt64">
            <summary>设置 OnlineSegment.set_Version(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.aInt32">
            <summary>设置 OnlineSegment.a(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimOnlineSegment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.AllInstances.ChannelsGet">
            <summary>设置 OnlineSegment.get_Channels() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.AllInstances.CountGet">
            <summary>设置 OnlineSegment.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.AllInstances.VersionGet">
            <summary>设置 OnlineSegment.get_Version() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.AllInstances.VersionSetInt64">
            <summary>设置 OnlineSegment.set_Version(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimOnlineSegment.AllInstances.aInt32">
            <summary>设置 OnlineSegment.a(Int32 A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimPackageReceiveArgs">
            <summary>Beetle.Express.PackageReceiveArgs 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimPackageReceiveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimPackageReceiveArgs.#ctor(Beetle.Express.PackageReceiveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimPackageReceiveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimPackageReceiveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.ChannelGet">
            <summary>设置 PackageReceiveArgs.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.ChannelSetIChannel">
            <summary>设置 PackageReceiveArgs.set_Channel(IChannel value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.Constructor">
            <summary>设置 PackageReceiveArgs.PackageReceiveArgs() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.MessageGet">
            <summary>设置 PackageReceiveArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.MessageSetObject">
            <summary>设置 PackageReceiveArgs.set_Message(Object value) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimPackageReceiveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.AllInstances.ChannelGet">
            <summary>设置 PackageReceiveArgs.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.AllInstances.ChannelSetIChannel">
            <summary>设置 PackageReceiveArgs.set_Channel(IChannel value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.AllInstances.MessageGet">
            <summary>设置 PackageReceiveArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimPackageReceiveArgs.AllInstances.MessageSetObject">
            <summary>设置 PackageReceiveArgs.set_Message(Object value) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimServerFactory">
            <summary>Beetle.Express.ServerFactory 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerFactory.#ctor(Beetle.Express.ServerFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerFactory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.ConstructorString">
            <summary>设置 ServerFactory.ServerFactory(String config) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.CreateTCP">
            <summary>设置 ServerFactory.CreateTCP() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.CreateUDP">
            <summary>设置 ServerFactory.CreateUDP() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.Dispose">
            <summary>设置 ServerFactory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.ServersGet">
            <summary>设置 ServerFactory.get_Servers() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.aListenCollection">
            <summary>设置 ServerFactory.a(ListenCollection A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimServerFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.AllInstances.Dispose">
            <summary>设置 ServerFactory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.AllInstances.ServersGet">
            <summary>设置 ServerFactory.get_Servers() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerFactory.AllInstances.aListenCollection">
            <summary>设置 ServerFactory.a(ListenCollection A_0) 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimServerSection">
            <summary>Beetle.Express.ServerSection 的填充码类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerSection.#ctor(Beetle.Express.ServerSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.ShimServerSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.Constructor">
            <summary>设置 ServerSection.ServerSection() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.InstanceGet">
            <summary>设置 ServerSection.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.IsReadOnly">
            <summary>设置 ServerSection.IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.ListensGet">
            <summary>设置 ServerSection.get_Listens() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.ListensSetListenCollection">
            <summary>设置 ServerSection.set_Listens(ListenCollection value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.XmlnsGet">
            <summary>设置 ServerSection.get_Xmlns() 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.ShimServerSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.AllInstances.IsReadOnly">
            <summary>设置 ServerSection.IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.AllInstances.ListensGet">
            <summary>设置 ServerSection.get_Listens() 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.AllInstances.ListensSetListenCollection">
            <summary>设置 ServerSection.set_Listens(ListenCollection value) 的 填充码</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.ShimServerSection.AllInstances.XmlnsGet">
            <summary>设置 ServerSection.get_Xmlns() 的 填充码</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubChannelConnectEventArgs">
            <summary>Beetle.Express.ChannelConnectEventArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelConnectEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelConnectEventArgs.InitializeStub">
            <summary>初始化 type StubChannelConnectEventArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelConnectEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelConnectEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelConnectEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubChannelEventArgs">
            <summary>Beetle.Express.ChannelEventArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelEventArgs.InitializeStub">
            <summary>初始化 type StubChannelEventArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubChannelReceiveEventArgs">
            <summary>Beetle.Express.ChannelReceiveEventArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelReceiveEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelReceiveEventArgs.InitializeStub">
            <summary>初始化 type StubChannelReceiveEventArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelReceiveEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelReceiveEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelReceiveEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubChannelSendEventArgs">
            <summary>Beetle.Express.ChannelSendEventArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelSendEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubChannelSendEventArgs.InitializeStub">
            <summary>初始化 type StubChannelSendEventArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelSendEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelSendEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubChannelSendEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubData">
            <summary>Beetle.Express.Data 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubData.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubData.#ctor(System.Byte[],System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubData.InitializeStub">
            <summary>初始化 type StubData 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubErrorEventArgs">
            <summary>Beetle.Express.ErrorEventArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubErrorEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubErrorEventArgs.InitializeStub">
            <summary>初始化 type StubErrorEventArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubErrorEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubErrorEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubErrorEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubIChannel">
            <summary>Beetle.Express.IChannel 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.#ctor">
            <summary>初始化 type StubIChannel 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.AttachBackingFieldToCloseStatus">
            <summary>附加委托以将 StubIChannel.CloseStatus 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.AttachBackingFieldToName">
            <summary>附加委托以将 StubIChannel.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.AttachBackingFieldToNode">
            <summary>附加委托以将 StubIChannel.Node 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.AttachBackingFieldToPackage">
            <summary>附加委托以将 StubIChannel.Package 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.AttachBackingFieldToStatus">
            <summary>附加委托以将 StubIChannel.Status 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.AttachBackingFieldToTag">
            <summary>附加委托以将 StubIChannel.Tag 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#InvokeError(System.Exception)">
            <summary>设置 IChannel.InvokeError(Exception e) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#InvokeReceive(Beetle.Express.IReceiveData)">
            <summary>设置 IChannel.InvokeReceive(IReceiveData data) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#InvokeSend">
            <summary>设置 IChannel.InvokeSend() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#LRUDetect#IConnecton#TimeOut">
            <summary>设置 IConnecton.TimeOut() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.ChannelTypeGet">
            <summary>设置 IChannel.get_ChannelType() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.CloseStatusGet">
            <summary>设置 IChannel.get_CloseStatus() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.CloseStatusSetString">
            <summary>设置 IChannel.set_CloseStatus(String value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.EndPointGet">
            <summary>设置 IChannel.get_EndPoint() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.IDGet">
            <summary>设置 IChannel.get_ID() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.InvokeErrorException">
            <summary>设置 IChannel.InvokeError(Exception e) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.InvokeReceiveIReceiveData">
            <summary>设置 IChannel.InvokeReceive(IReceiveData data) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.InvokeSend">
            <summary>设置 IChannel.InvokeSend() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.IsDisposedGet">
            <summary>设置 IChannel.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.ItemGetString">
            <summary>设置 IChannel.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.ItemSetStringObject">
            <summary>设置 IChannel.set_Item(String name, Object value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.NameGet">
            <summary>设置 IChannel.get_Name() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.NameSetString">
            <summary>设置 IChannel.set_Name(String value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.NodeGet">
            <summary>设置 IConnecton.get_Node() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.NodeSetLinkedListNodeOfLRUDetectNode">
            <summary>设置 IConnecton.set_Node(LinkedListNode`1&lt;Node&gt; value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.PackageGet">
            <summary>设置 IChannel.get_Package() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.PackageSetIPackage">
            <summary>设置 IChannel.set_Package(IPackage value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.ServerGet">
            <summary>设置 IChannel.get_Server() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.SocketGet">
            <summary>设置 IChannel.get_Socket() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.StatusGet">
            <summary>设置 IChannel.get_Status() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.StatusSetChannelStatus">
            <summary>设置 IChannel.set_Status(ChannelStatus value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIChannel.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.TagGet">
            <summary>设置 IChannel.get_Tag() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.TagSetObject">
            <summary>设置 IChannel.set_Tag(Object value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIChannel.TimeOut">
            <summary>设置 IConnecton.TimeOut() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#ChannelType">
            <summary>设置 IChannel.get_ChannelType() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#CloseStatus">
            <summary>设置 IChannel.get_CloseStatus() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#EndPoint">
            <summary>设置 IChannel.get_EndPoint() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#ID">
            <summary>设置 IChannel.get_ID() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#IsDisposed">
            <summary>设置 IChannel.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.Beetle#Express#IChannel#Item(System.String)">
            <summary>设置 IChannel.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#Name">
            <summary>设置 IChannel.get_Name() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#LRUDetect#IConnecton#Node">
            <summary>设置 IConnecton.get_Node() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#Package">
            <summary>设置 IChannel.get_Package() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#Server">
            <summary>设置 IChannel.get_Server() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#Socket">
            <summary>设置 IChannel.get_Socket() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#Status">
            <summary>设置 IChannel.get_Status() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIChannel.be::Beetle#Express#IChannel#Tag">
            <summary>设置 IChannel.get_Tag() 的 stub</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubIData">
            <summary>Beetle.Express.IData 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.#ctor">
            <summary>初始化 type StubIData 的新实例</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.ArrayGet">
            <summary>设置 IData.get_Array() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.ArraySetByteArray">
            <summary>设置 IData.set_Array(Byte[] value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.AttachBackingFieldToArray">
            <summary>附加委托以将 StubIData.Array 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.AttachBackingFieldToCount">
            <summary>附加委托以将 StubIData.Count 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.AttachBackingFieldToOffset">
            <summary>附加委托以将 StubIData.Offset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.AttachBackingFieldToTag">
            <summary>附加委托以将 StubIData.Tag 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.AttachBackingFieldToUsePool">
            <summary>附加委托以将 StubIData.UsePool 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#Decrement">
            <summary>设置 IData.Decrement() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#ExChange(System.Int32)">
            <summary>设置 IData.ExChange(Int32 value) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.CountGet">
            <summary>设置 IData.get_Count() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.CountSetInt32">
            <summary>设置 IData.set_Count(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.CounterGet">
            <summary>设置 IData.get_Counter() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.Decrement">
            <summary>设置 IData.Decrement() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.ExChangeInt32">
            <summary>设置 IData.ExChange(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.OffsetGet">
            <summary>设置 IData.get_Offset() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.OffsetSetInt32">
            <summary>设置 IData.set_Offset(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.TagGet">
            <summary>设置 IData.get_Tag() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.TagSetObject">
            <summary>设置 IData.set_Tag(Object value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.UsePoolGet">
            <summary>设置 IData.get_UsePool() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIData.UsePoolSetBoolean">
            <summary>设置 IData.set_UsePool(Boolean value) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#Array">
            <summary>设置 IData.get_Array() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#Count">
            <summary>设置 IData.get_Count() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#Counter">
            <summary>设置 IData.get_Counter() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#Offset">
            <summary>设置 IData.get_Offset() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#Tag">
            <summary>设置 IData.get_Tag() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIData.be::Beetle#Express#IData#UsePool">
            <summary>设置 IData.get_UsePool() 的 stub</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubIReceiveData">
            <summary>Beetle.Express.IReceiveData 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIReceiveData.#ctor">
            <summary>初始化 type StubIReceiveData 的新实例</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIReceiveData.ArrayGet">
            <summary>设置 IReceiveData.get_Array() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIReceiveData.be::Beetle#Express#IReceiveData#ToString(System.Text.Encoding)">
            <summary>设置 IReceiveData.ToString(Encoding coding) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIReceiveData.CountGet">
            <summary>设置 IReceiveData.get_Count() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIReceiveData.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIReceiveData.OffsetGet">
            <summary>设置 IReceiveData.get_Offset() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIReceiveData.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIReceiveData.ToStringEncoding">
            <summary>设置 IReceiveData.ToString(Encoding coding) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIReceiveData.be::Beetle#Express#IReceiveData#Array">
            <summary>设置 IReceiveData.get_Array() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIReceiveData.be::Beetle#Express#IReceiveData#Count">
            <summary>设置 IReceiveData.get_Count() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIReceiveData.be::Beetle#Express#IReceiveData#Offset">
            <summary>设置 IReceiveData.get_Offset() 的 stub</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubIServer">
            <summary>Beetle.Express.IServer 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.#ctor">
            <summary>初始化 type StubIServer 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToHandler">
            <summary>附加委托以将 StubIServer.Handler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToHost">
            <summary>附加委托以将 StubIServer.Host 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToPort">
            <summary>附加委托以将 StubIServer.Port 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToRecDispatchs">
            <summary>附加委托以将 StubIServer.RecDispatchs 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToReceiveBufferSize">
            <summary>附加委托以将 StubIServer.ReceiveBufferSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToReceiveDataPoolSize">
            <summary>附加委托以将 StubIServer.ReceiveDataPoolSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToSendBufferSize">
            <summary>附加委托以将 StubIServer.SendBufferSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToSendDispatchs">
            <summary>附加委托以将 StubIServer.SendDispatchs 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToSyncSend">
            <summary>附加委托以将 StubIServer.SyncSend 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToUseReceiveQueue">
            <summary>附加委托以将 StubIServer.UseReceiveQueue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToUseSendQueue">
            <summary>附加委托以将 StubIServer.UseSendQueue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.AttachBackingFieldToVersion">
            <summary>附加委托以将 StubIServer.Version 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#GetChannel(System.String)">
            <summary>设置 IServer.GetChannel(String id) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#GetOnlines(Beetle.Express.IChannel[])">
            <summary>设置 IServer.GetOnlines(IChannel[] array) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#GetOnlines">
            <summary>设置 IServer.GetOnlines() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#GetOnlines(Beetle.Express.OnlineSegment)">
            <summary>设置 IServer.GetOnlines(OnlineSegment segment) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#GetReceiveQuues">
            <summary>设置 IServer.GetReceiveQuues() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#GetSendQueues">
            <summary>设置 IServer.GetSendQueues() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#InvokeReceive(Beetle.Express.IReceiveData)">
            <summary>设置 IServer.InvokeReceive(IReceiveData rd) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#InvokeSend(Beetle.Express.IChannel)">
            <summary>设置 IServer.InvokeSend(IChannel channel) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Open">
            <summary>设置 IServer.Open() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Open(Beetle.Express.Listen)">
            <summary>设置 IServer.Open(Listen listen) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Open(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>设置 IServer.Open(Boolean useReceiveQueue, Boolean useSendQueue, Boolean syncSend, Int32 recDispatchs, Int32 sendDispatchs, String serverName) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#PopData">
            <summary>设置 IServer.PopData() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Send(System.Object,System.Collections.Generic.IList{Beetle.Express.IChannel})">
            <summary>设置 IServer.Send(Object data, IList`1&lt;IChannel&gt; channels) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Send(System.Object,Beetle.Express.IChannel[])">
            <summary>设置 IServer.Send(Object data, IChannel[] channels) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.CountGet">
            <summary>设置 IServer.get_Count() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.GetChannelString">
            <summary>设置 IServer.GetChannel(String id) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.GetOnlines">
            <summary>设置 IServer.GetOnlines() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.GetOnlinesIChannelArray">
            <summary>设置 IServer.GetOnlines(IChannel[] array) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.GetOnlinesOnlineSegment">
            <summary>设置 IServer.GetOnlines(OnlineSegment segment) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.GetReceiveQuues">
            <summary>设置 IServer.GetReceiveQuues() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.GetSendQueues">
            <summary>设置 IServer.GetSendQueues() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.HandlerGet">
            <summary>设置 IServer.get_Handler() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.HandlerSetIServerHandler">
            <summary>设置 IServer.set_Handler(IServerHandler value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.HostGet">
            <summary>设置 IServer.get_Host() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.HostSetString">
            <summary>设置 IServer.set_Host(String value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.InvokeReceiveIReceiveData">
            <summary>设置 IServer.InvokeReceive(IReceiveData rd) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.InvokeSendIChannel">
            <summary>设置 IServer.InvokeSend(IChannel channel) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.NameGet">
            <summary>设置 IServer.get_Name() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.Open">
            <summary>设置 IServer.Open() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.OpenBooleanBooleanBooleanInt32Int32String">
            <summary>设置 IServer.Open(Boolean useReceiveQueue, Boolean useSendQueue, Boolean syncSend, Int32 recDispatchs, Int32 sendDispatchs, String serverName) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.OpenListen">
            <summary>设置 IServer.Open(Listen listen) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.PopData">
            <summary>设置 IServer.PopData() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.PortGet">
            <summary>设置 IServer.get_Port() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.PortSetInt32">
            <summary>设置 IServer.set_Port(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.RecDispatchsGet">
            <summary>设置 IServer.get_RecDispatchs() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.RecDispatchsSetInt32">
            <summary>设置 IServer.set_RecDispatchs(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.ReceiveBufferSizeGet">
            <summary>设置 IServer.get_ReceiveBufferSize() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.ReceiveBufferSizeSetInt32">
            <summary>设置 IServer.set_ReceiveBufferSize(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.ReceiveDataPoolSizeGet">
            <summary>设置 IServer.get_ReceiveDataPoolSize() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.ReceiveDataPoolSizeSetInt32">
            <summary>设置 IServer.set_ReceiveDataPoolSize(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SendBufferSizeGet">
            <summary>设置 IServer.get_SendBufferSize() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SendBufferSizeSetInt32">
            <summary>设置 IServer.set_SendBufferSize(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SendDispatchsGet">
            <summary>设置 IServer.get_SendDispatchs() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SendDispatchsSetInt32">
            <summary>设置 IServer.set_SendDispatchs(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SendObjectIChannelArray">
            <summary>设置 IServer.Send(Object data, IChannel[] channels) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SendObjectIListOfIChannel">
            <summary>设置 IServer.Send(Object data, IList`1&lt;IChannel&gt; channels) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SyncSendGet">
            <summary>设置 IServer.get_SyncSend() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.SyncSendSetBoolean">
            <summary>设置 IServer.set_SyncSend(Boolean value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServer.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.UseReceiveQueueGet">
            <summary>设置 IServer.get_UseReceiveQueue() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.UseReceiveQueueSetBoolean">
            <summary>设置 IServer.set_UseReceiveQueue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.UseSendQueueGet">
            <summary>设置 IServer.get_UseSendQueue() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.UseSendQueueSetBoolean">
            <summary>设置 IServer.set_UseSendQueue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.VersionGet">
            <summary>设置 IServer.get_Version() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServer.VersionSetInt32">
            <summary>设置 IServer.set_Version(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Count">
            <summary>设置 IServer.get_Count() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Handler">
            <summary>设置 IServer.get_Handler() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Host">
            <summary>设置 IServer.get_Host() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Name">
            <summary>设置 IServer.get_Name() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Port">
            <summary>设置 IServer.get_Port() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#RecDispatchs">
            <summary>设置 IServer.get_RecDispatchs() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#ReceiveBufferSize">
            <summary>设置 IServer.get_ReceiveBufferSize() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#ReceiveDataPoolSize">
            <summary>设置 IServer.get_ReceiveDataPoolSize() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#SendBufferSize">
            <summary>设置 IServer.get_SendBufferSize() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#SendDispatchs">
            <summary>设置 IServer.get_SendDispatchs() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#SyncSend">
            <summary>设置 IServer.get_SyncSend() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#UseReceiveQueue">
            <summary>设置 IServer.get_UseReceiveQueue() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#UseSendQueue">
            <summary>设置 IServer.get_UseSendQueue() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubIServer.be::Beetle#Express#IServer#Version">
            <summary>设置 IServer.get_Version() 的 stub</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubIServerHandler">
            <summary>Beetle.Express.IServerHandler 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServerHandler.#ctor">
            <summary>初始化 type StubIServerHandler 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServerHandler.be::Beetle#Express#IServerHandler#Connect(Beetle.Express.IServer,Beetle.Express.ChannelConnectEventArgs)">
            <summary>设置 IServerHandler.Connect(IServer server, ChannelConnectEventArgs e) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServerHandler.be::Beetle#Express#IServerHandler#Disposed(Beetle.Express.IServer,Beetle.Express.ChannelEventArgs)">
            <summary>设置 IServerHandler.Disposed(IServer server, ChannelEventArgs e) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServerHandler.be::Beetle#Express#IServerHandler#Error(Beetle.Express.IServer,Beetle.Express.ErrorEventArgs)">
            <summary>设置 IServerHandler.Error(IServer server, ErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServerHandler.be::Beetle#Express#IServerHandler#Opened(Beetle.Express.IServer)">
            <summary>设置 IServerHandler.Opened(IServer server) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServerHandler.be::Beetle#Express#IServerHandler#Receive(Beetle.Express.IServer,Beetle.Express.ChannelReceiveEventArgs)">
            <summary>设置 IServerHandler.Receive(IServer server, ChannelReceiveEventArgs e) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubIServerHandler.be::Beetle#Express#IServerHandler#SendCompleted(Beetle.Express.IServer,Beetle.Express.ChannelSendEventArgs)">
            <summary>设置 IServerHandler.SendCompleted(IServer server, ChannelSendEventArgs e) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServerHandler.ConnectIServerChannelConnectEventArgs">
            <summary>设置 IServerHandler.Connect(IServer server, ChannelConnectEventArgs e) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServerHandler.DisposedIServerChannelEventArgs">
            <summary>设置 IServerHandler.Disposed(IServer server, ChannelEventArgs e) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServerHandler.ErrorIServerErrorEventArgs">
            <summary>设置 IServerHandler.Error(IServer server, ErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServerHandler.OpenedIServer">
            <summary>设置 IServerHandler.Opened(IServer server) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServerHandler.ReceiveIServerChannelReceiveEventArgs">
            <summary>设置 IServerHandler.Receive(IServer server, ChannelReceiveEventArgs e) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubIServerHandler.SendCompletedIServerChannelSendEventArgs">
            <summary>设置 IServerHandler.SendCompleted(IServer server, ChannelSendEventArgs e) 的 stub</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubLRUDetect">
            <summary>Beetle.Express.LRUDetect 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubLRUDetect.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubLRUDetect.InitializeStub">
            <summary>初始化 type StubLRUDetect 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubLRUDetect.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubLRUDetect.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubLRUDetect.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubListen">
            <summary>Beetle.Express.Listen 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToHandler">
            <summary>附加委托以将 StubListen.Handler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToHost">
            <summary>附加委托以将 StubListen.Host 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToName">
            <summary>附加委托以将 StubListen.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToPort">
            <summary>附加委托以将 StubListen.Port 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToReceiveBufferSize">
            <summary>附加委托以将 StubListen.ReceiveBufferSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToReceiveDataPoolSize">
            <summary>附加委托以将 StubListen.ReceiveDataPoolSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToReceiveDispatchs">
            <summary>附加委托以将 StubListen.ReceiveDispatchs 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToSendBufferSize">
            <summary>附加委托以将 StubListen.SendBufferSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToSendDispatchs">
            <summary>附加委托以将 StubListen.SendDispatchs 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToSyncSend">
            <summary>附加委托以将 StubListen.SyncSend 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToType">
            <summary>附加委托以将 StubListen.Type 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToUseReceiveQueue">
            <summary>附加委托以将 StubListen.UseReceiveQueue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.AttachBackingFieldToUseSendQueue">
            <summary>附加委托以将 StubListen.UseSendQueue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.DeserializeElementXmlReaderBoolean">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ElementPropertyGet">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.Equals(System.Object)">
            <summary>设置 ConfigurationElement.Equals(Object compareTo) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.EqualsObject">
            <summary>设置 ConfigurationElement.Equals(Object compareTo) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.GetHashCode">
            <summary>设置 ConfigurationElement.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.GetHashCode01">
            <summary>设置 ConfigurationElement.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.GetTransformedAssemblyString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.GetTransformedAssemblyStringString">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.GetTransformedTypeString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.GetTransformedTypeStringString">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.HandlerGet">
            <summary>设置 Listen.get_Handler() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.HandlerSetString">
            <summary>设置 Listen.set_Handler(String value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.HostGet">
            <summary>设置 Listen.get_Host() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.HostSetString">
            <summary>设置 Listen.set_Host(String value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.Init">
            <summary>设置 ConfigurationElement.Init() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.Init01">
            <summary>设置 ConfigurationElement.Init() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.InitializeDefault">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.InitializeDefault01">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.InitializeStub">
            <summary>初始化 type StubListen 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.IsModified">
            <summary>设置 ConfigurationElement.IsModified() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.IsModified01">
            <summary>设置 ConfigurationElement.IsModified() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.IsReadOnly">
            <summary>设置 Listen.IsReadOnly() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.IsReadOnly01">
            <summary>设置 Listen.IsReadOnly() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.ListErrors(System.Collections.IList)">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ListErrorsIList">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.NameGet">
            <summary>设置 Listen.get_Name() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.NameSetString">
            <summary>设置 Listen.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.OnDeserializeUnrecognizedAttributeStringString">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.OnRequiredPropertyNotFound(System.String)">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.OnRequiredPropertyNotFoundString">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.PortGet">
            <summary>设置 Listen.get_Port() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.PortSetInt32">
            <summary>设置 Listen.set_Port(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.PostDeserialize">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.PostDeserialize01">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.PreSerialize(System.Xml.XmlWriter)">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.PreSerializeXmlWriter">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.PropertiesGet">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ReceiveBufferSizeGet">
            <summary>设置 Listen.get_ReceiveBufferSize() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ReceiveBufferSizeSetInt32">
            <summary>设置 Listen.set_ReceiveBufferSize(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ReceiveDataPoolSizeGet">
            <summary>设置 Listen.get_ReceiveDataPoolSize() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ReceiveDataPoolSizeSetInt32">
            <summary>设置 Listen.set_ReceiveDataPoolSize(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ReceiveDispatchsGet">
            <summary>设置 Listen.get_ReceiveDispatchs() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ReceiveDispatchsSetInt32">
            <summary>设置 Listen.set_ReceiveDispatchs(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.Reset(System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationElement.Reset(ConfigurationElement parentElement) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ResetConfigurationElement">
            <summary>设置 ConfigurationElement.Reset(ConfigurationElement parentElement) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.ResetModified">
            <summary>设置 ConfigurationElement.ResetModified() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.ResetModified01">
            <summary>设置 ConfigurationElement.ResetModified() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SendBufferSizeGet">
            <summary>设置 Listen.get_SendBufferSize() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SendBufferSizeSetInt32">
            <summary>设置 Listen.set_SendBufferSize(Int32 value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SendDispatchsGet">
            <summary>设置 Listen.get_SendDispatchs() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SendDispatchsSetInt32">
            <summary>设置 Listen.set_SendDispatchs(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>设置 ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SerializeElementXmlWriterBoolean">
            <summary>设置 ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SerializeToXmlElementXmlWriterString">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.SetReadOnly">
            <summary>设置 ConfigurationElement.SetReadOnly() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SetReadOnly01">
            <summary>设置 ConfigurationElement.SetReadOnly() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SyncSendGet">
            <summary>设置 Listen.get_SyncSend() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.SyncSendSetBoolean">
            <summary>设置 Listen.set_SyncSend(Boolean value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.TypeGet">
            <summary>设置 Listen.get_Type() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.TypeSetString">
            <summary>设置 Listen.set_Type(String value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListen.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>设置 ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>设置 ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.UseReceiveQueueGet">
            <summary>设置 Listen.get_UseReceiveQueue() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.UseReceiveQueueSetBoolean">
            <summary>设置 Listen.set_UseReceiveQueue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.UseSendQueueGet">
            <summary>设置 Listen.get_UseSendQueue() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListen.UseSendQueueSetBoolean">
            <summary>设置 Listen.set_UseSendQueue(Boolean value) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.ElementProperty">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.Handler">
            <summary>设置 Listen.get_Handler() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.Host">
            <summary>设置 Listen.get_Host() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.Name">
            <summary>设置 Listen.get_Name() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.Port">
            <summary>设置 Listen.get_Port() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.Properties">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.ReceiveBufferSize">
            <summary>设置 Listen.get_ReceiveBufferSize() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.ReceiveDataPoolSize">
            <summary>设置 Listen.get_ReceiveDataPoolSize() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.ReceiveDispatchs">
            <summary>设置 Listen.get_ReceiveDispatchs() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.SendBufferSize">
            <summary>设置 Listen.get_SendBufferSize() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.SendDispatchs">
            <summary>设置 Listen.get_SendDispatchs() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.SyncSend">
            <summary>设置 Listen.get_SyncSend() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.Type">
            <summary>设置 Listen.get_Type() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.UseReceiveQueue">
            <summary>设置 Listen.get_UseReceiveQueue() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListen.UseSendQueue">
            <summary>设置 Listen.get_UseSendQueue() 的 stub</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubListenCollection">
            <summary>Beetle.Express.ListenCollection 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationElementCollection.BaseAdd(ConfigurationElement element) 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.BaseAddConfigurationElement">
            <summary>设置 ConfigurationElementCollection.BaseAdd(ConfigurationElement element) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.BaseAddInt32ConfigurationElement">
            <summary>设置 ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.CollectionTypeGet">
            <summary>设置 ListenCollection.get_CollectionType() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.CreateNewElement">
            <summary>设置 ListenCollection.CreateNewElement() 的 存根</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.CreateNewElement(System.String)">
            <summary>设置 ConfigurationElementCollection.CreateNewElement(String elementName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.CreateNewElement01">
            <summary>设置 ListenCollection.CreateNewElement() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.CreateNewElementString">
            <summary>设置 ConfigurationElementCollection.CreateNewElement(String elementName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.DeserializeElementXmlReaderBoolean">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.ElementNameGet">
            <summary>设置 ListenCollection.get_ElementName() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.ElementPropertyGet">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.Equals(System.Object)">
            <summary>设置 ConfigurationElementCollection.Equals(Object compareTo) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.EqualsObject">
            <summary>设置 ConfigurationElementCollection.Equals(Object compareTo) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>设置 ListenCollection.GetElementKey(ConfigurationElement element) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.GetElementKeyConfigurationElement">
            <summary>设置 ListenCollection.GetElementKey(ConfigurationElement element) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.GetHashCode">
            <summary>设置 ConfigurationElementCollection.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.GetHashCode01">
            <summary>设置 ConfigurationElementCollection.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.GetTransformedAssemblyString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.GetTransformedAssemblyStringString">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.GetTransformedTypeString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.GetTransformedTypeStringString">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.Init">
            <summary>设置 ConfigurationElement.Init() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.Init01">
            <summary>设置 ConfigurationElement.Init() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.InitializeDefault">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.InitializeDefault01">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.InitializeStub">
            <summary>初始化 type StubListenCollection 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.IsElementName(System.String)">
            <summary>设置 ListenCollection.IsElementName(String elementName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.IsElementNameString">
            <summary>设置 ListenCollection.IsElementName(String elementName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.IsElementRemovableConfigurationElement">
            <summary>设置 ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.IsModified">
            <summary>设置 ConfigurationElementCollection.IsModified() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.IsModified01">
            <summary>设置 ConfigurationElementCollection.IsModified() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.IsReadOnly">
            <summary>设置 ListenCollection.IsReadOnly() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.IsReadOnly01">
            <summary>设置 ListenCollection.IsReadOnly() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.ListErrors(System.Collections.IList)">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.ListErrorsIList">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>设置 ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>设置 ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.OnRequiredPropertyNotFound(System.String)">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.OnRequiredPropertyNotFoundString">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.PostDeserialize">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.PostDeserialize01">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.PreSerialize(System.Xml.XmlWriter)">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.PreSerializeXmlWriter">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.PropertiesGet">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationElementCollection.Reset(ConfigurationElement parentElement) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.ResetConfigurationElement">
            <summary>设置 ConfigurationElementCollection.Reset(ConfigurationElement parentElement) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.ResetModified">
            <summary>设置 ConfigurationElementCollection.ResetModified() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.ResetModified01">
            <summary>设置 ConfigurationElementCollection.ResetModified() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>设置 ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.SerializeElementXmlWriterBoolean">
            <summary>设置 ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.SerializeToXmlElementXmlWriterString">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.SetReadOnly">
            <summary>设置 ConfigurationElementCollection.SetReadOnly() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.SetReadOnly01">
            <summary>设置 ConfigurationElementCollection.SetReadOnly() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.ThrowOnDuplicateGet">
            <summary>设置 ConfigurationElementCollection.get_ThrowOnDuplicate() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubListenCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>设置 ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubListenCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>设置 ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.CollectionType">
            <summary>设置 ListenCollection.get_CollectionType() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.ElementName">
            <summary>设置 ListenCollection.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.ElementProperty">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.Properties">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubListenCollection.ThrowOnDuplicate">
            <summary>设置 ConfigurationElementCollection.get_ThrowOnDuplicate() 的 stub</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubOnlineSegment">
            <summary>Beetle.Express.OnlineSegment 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubOnlineSegment.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubOnlineSegment.InitializeStub">
            <summary>初始化 type StubOnlineSegment 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubOnlineSegment.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubOnlineSegment.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubOnlineSegment.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubPackageReceiveArgs">
            <summary>Beetle.Express.PackageReceiveArgs 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubPackageReceiveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubPackageReceiveArgs.InitializeStub">
            <summary>初始化 type StubPackageReceiveArgs 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubPackageReceiveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubPackageReceiveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubPackageReceiveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubServerFactory">
            <summary>Beetle.Express.ServerFactory 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerFactory.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerFactory.InitializeStub">
            <summary>初始化 type StubServerFactory 的新实例</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Beetle.Express.Fakes.StubServerSection">
            <summary>Beetle.Express.ServerSection 的存根类型</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.AttachBackingFieldToListens">
            <summary>附加委托以将 StubServerSection.Listens 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.DeserializeElementXmlReaderBoolean">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.DeserializeSection(System.Xml.XmlReader)">
            <summary>设置 ConfigurationSection.DeserializeSection(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.DeserializeSectionXmlReader">
            <summary>设置 ConfigurationSection.DeserializeSection(XmlReader reader) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ElementPropertyGet">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.Equals(System.Object)">
            <summary>设置 ConfigurationElement.Equals(Object compareTo) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.EqualsObject">
            <summary>设置 ConfigurationElement.Equals(Object compareTo) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.GetHashCode">
            <summary>设置 ConfigurationElement.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.GetHashCode01">
            <summary>设置 ConfigurationElement.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.GetRuntimeObject">
            <summary>设置 ConfigurationSection.GetRuntimeObject() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.GetRuntimeObject01">
            <summary>设置 ConfigurationSection.GetRuntimeObject() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.GetTransformedAssemblyString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.GetTransformedAssemblyStringString">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.GetTransformedTypeString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.GetTransformedTypeStringString">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.Init">
            <summary>设置 ConfigurationElement.Init() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.Init01">
            <summary>设置 ConfigurationElement.Init() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.InitializeDefault">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.InitializeDefault01">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.InitializeStub">
            <summary>初始化 type StubServerSection 的新实例</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.IsModified">
            <summary>设置 ConfigurationSection.IsModified() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.IsModified01">
            <summary>设置 ConfigurationSection.IsModified() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.IsReadOnly">
            <summary>设置 ServerSection.IsReadOnly() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.IsReadOnly01">
            <summary>设置 ServerSection.IsReadOnly() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.ListErrors(System.Collections.IList)">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ListErrorsIList">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ListensGet">
            <summary>设置 ServerSection.get_Listens() 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ListensSetListenCollection">
            <summary>设置 ServerSection.set_Listens(ListenCollection value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.OnRequiredPropertyNotFound(System.String)">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.OnRequiredPropertyNotFoundString">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.PostDeserialize">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.PostDeserialize01">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.PreSerialize(System.Xml.XmlWriter)">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.PreSerializeXmlWriter">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.PropertiesGet">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.Reset(System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationElement.Reset(ConfigurationElement parentElement) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ResetConfigurationElement">
            <summary>设置 ConfigurationElement.Reset(ConfigurationElement parentElement) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.ResetModified">
            <summary>设置 ConfigurationSection.ResetModified() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ResetModified01">
            <summary>设置 ConfigurationSection.ResetModified() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>设置 ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.SerializeElementXmlWriterBoolean">
            <summary>设置 ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>设置 ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>设置 ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.SerializeToXmlElementXmlWriterString">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.SetReadOnly">
            <summary>设置 ConfigurationElement.SetReadOnly() 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.SetReadOnly01">
            <summary>设置 ConfigurationElement.SetReadOnly() 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>设置 ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>设置 ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>设置 ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>设置 ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>设置 ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework) 的 stub</summary>
        </member>
        <member name="M:Beetle.Express.Fakes.StubServerSection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>设置 ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 存根</summary>
        </member>
        <member name="F:Beetle.Express.Fakes.StubServerSection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>设置 ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerSection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerSection.ElementProperty">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerSection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerSection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerSection.Listens">
            <summary>设置 ServerSection.get_Listens() 的 stub</summary>
        </member>
        <member name="P:Beetle.Express.Fakes.StubServerSection.Properties">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
    </members>
</doc>
